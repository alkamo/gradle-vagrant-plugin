buildscript {
    repositories {
        maven { url 'http://jcenter.bintray.com' }
    }

    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:0.6'
        classpath 'org.ajoberstar:gradle-git:0.9.0'
    }
}

apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'github-pages'

group = 'com.bmuschko'
version = '2.0'

repositories {
    mavenCentral()
}

dependencies {
    compile localGroovy()
    compile gradleApi()
    testCompile('org.spockframework:spock-core:0.7-groovy-2.0') {
        exclude group: 'org.codehaus.groovy'
    }
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Vagrant plugin',
                   'Implementation-Version': version,
                   'Built-By': System.getProperty('user.name'),
                   'Built-Date': new Date(),
                   'Built-JDK': System.getProperty('java.version'),
                   'Built-Gradle': gradle.gradleVersion
    }
}

idea.project {
    jdkName = '1.6'

    ipr.withXml { provider ->
        def node = provider.asNode()

        // Use GIT
        def vcsConfig = node.component.find { it.'@name' == 'VcsDirectoryMappings' }
        vcsConfig.mapping[0].'@vcs' = 'Git'

        // Set Gradle home
        def gradleSettings = node.appendNode('component', [name: 'GradleSettings'])
        gradleSettings.appendNode('option', [name: 'SDK_HOME', value: gradle.gradleHomeDir])
    }
}

task sourcesJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allSource
}

task groovydocJar(type: Jar, dependsOn: groovydoc) {
    classifier 'groovydoc'
    from groovydoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives groovydocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact groovydocJar

            pom.withXml {
                def root = asNode()
                root.appendNode('name', 'Gradle Vagrant plugin')
                root.appendNode('description', 'Gradle plugin for managing Vagrant boxes.')
                root.appendNode('inceptionYear', '2013')

                def license = root.appendNode('licenses').appendNode('license')
                license.appendNode('name', 'The Apache Software License, Version 2.0')
                license.appendNode('url', 'http://www.apache.org/licenses/LICENSE-2.0.txt')
                license.appendNode('distribution', 'repo')

                def developers = root.appendNode('developers')
                def bmuschko = developers.appendNode('developer')
                bmuschko.appendNode('id', 'bmuschko')
                bmuschko.appendNode('name', 'Benjamin Muschko')
                bmuschko.appendNode('email', 'benjamin.muschko@gmail.com')
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.1'
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.getProperty('bintrayUser') : null
    key =  project.hasProperty('bintrayKey') ? project.getProperty('bintrayKey') : null
    publications = ['mavenJava']

    pkg {
        repo = 'gradle-plugins'
        name = 'gradle-vagrant-plugin'
        licenses = ['Apache-2.0']
    }

    pkg {
        repo = 'gradle-plugins'
        name = 'com.bmuschko:gradle-vagrant-plugin'
        desc = 'Gradle plugin for managing Vagrant boxes.'
        websiteUrl = "https://github.com/bmuschko/${project.name}"
        issueTrackerUrl = "https://github.com/bmuschko/${project.name}/issues"
        vcsUrl = "https://github.com/bmuschko/${project.name}.git"
        licenses = ['Apache-2.0']
        labels = ['gradle', 'vagrant', 'vm', 'virtual', 'machine', 'provisioning', 'infrastructure']
        publicDownloadNumbers = true

        version {
            vcsTag = "v$project.version"
            attributes = ['gradle-plugin': ["com.bmuschko.vagrant:${project.group}:${project.name}",
                                            "com.bmuschko.vagrant-base:${project.group}:${project.name}"]]

            gpg {
                sign = true
                passphrase = project.hasProperty('gpgPassphrase') ? project.getProperty('gpgPassphrase') : null
            }
        }
    }
}

githubPages {
    repoUri = 'git@github.com:bmuschko/gradle-vagrant-plugin.git'

    pages {
        from(javadoc.outputs.files) {
            into 'docs/javadoc'
        }
        from(groovydoc.outputs.files) {
            into 'docs/groovydoc'
        }
    }
}
