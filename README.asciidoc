Gradle Vagrant plugin
=====================

image:http://www.hashicorp.com/images/blog/a-new-look-for-vagrant/logo_wide-cab47086.png[Vagrant Logo]

Gradle plugin for managing link:http://www.vagrantup.com/[Vagrant] boxes.

== Usage

To use the plugin, include in your build script:

[source,groovy]
----
buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.gradle.api.plugins:gradle-vagrant-plugin:0.6'
    }
}
----


== Base plugin

If you want to create your own task for managing Vagrant, you should go with the base plugin. This option is usually helpful
if you are dealing with multiple VMs in parallel. The base plugin provides all custom task types and preconfigures them with
sensible defaults. To use the base plugin, add the following `apply` notation to your build script.

[source,groovy]
----
apply plugin: 'vagrant-base'
----


=== Custom task types

The base plugin provides the following custom task types:

[options="header"]
|=======
|Type               |Description
|VagrantDestroy     |Stops the running machine Vagrant is managing and destroys all resources.
|VagrantHalt        |Shuts down the running machine Vagrant is managing.
|VagrantReload      |The equivalent of running a halt followed by an up.
|VagrantResume      |Resumes the guest machine Vagrant is managing.
|VagrantSsh         |Executes a SSH command on the Vagrant machine.
|VagrantSshConfig   |Outputs the valid configuration for an SSH config file to SSH.
|VagrantStatus      |Outputs the state of the machines Vagrant is managing.
|VagrantSuspend     |Suspends the guest machine Vagrant is managing.
|VagrantUp          |Creates and configures guest machines according to your Vagrantfile.
|=======


=== Extension properties

The base plugin defines the following extension properties in the `vagrant` closure:

[options="header"]
|=======
|Property name   |Type      |Default value          |Description
|`boxDir`        |File      |`project.projectDir`   |The directory the targeted Vagrant box resides in.
|`provider`      |String    |virtualbox             |The link:http://docs.vagrantup.com/v2/providers/index.html[backend provider] to be used.
|=======

The recommended way for providing values to the `Vagrantfile` from the outside is to use environment variables. This is made
possible through the nested configuration element `environmentVariables`. This element exposes the method `variable` that
takes two parameters: the key and value for a environment variable. For each invocation of this method a new key/value pair
is added to internal property named `variables`.

[options="header"]
|=======
|Property name   |Type                      |Default value          |Description
|`variables`     |Map<String, String>       |[:]                    |Provided environment variables as key/value pairs.
|=======

=== Example

[source,groovy]
----
import org.gradle.api.plugins.vagrant.tasks.VagrantUp
import org.gradle.api.plugins.vagrant.tasks.VagrantDestroy

ext {
    virtualBoxDir = file('virtualbox-box')
    fusionBoxDir = file('fusion-box')
    fusionProvider = 'vmware_fusion'
}

task startVirtualBoxVm(type: VagrantUp) {
    description = 'Starts VM machine running on VirtualBox.'
    group = 'VirtualBox VM'
    boxDir = virtualBoxDir
}

task stopVirtualBoxVm(type: VagrantDestroy) {
    description = 'Stops VM machine running on VirtualBox.'
    group = 'VirtualBox VM'
    boxDir = virtualBoxDir
}

task startFusionVm(type: VagrantUp) {
    description = 'Starts VM machine running on VMware Fusion.'
    group = 'Fusion VM'
    boxDir = fusionBoxDir
    provider = fusionProvider
}

task stopFusionVm(type: VagrantDestroy) {
    description = 'Stops VM machine running on VMware Fusion.'
    group = 'Fusion VM'
    boxDir = fusionBoxDir
    provider = fusionProvider
}
----


== Convention plugin

If you want the plugin to preconfigure commonly-used tasks for you, you should go with the full-fledged convention plugin.
This plugin is a viable option if you only have to deal with a single VM. To use the convention plugin, add the following `apply`
notation to your build script.

[source,groovy]
----
apply plugin: 'vagrant'
----


=== Default tasks

The plugin defines the following tasks:

[options="header"]
|=======
|Task name           |Depends on |Type
|`vagrantDestroy`    |-          |VagrantDestroy
|`vagrantHalt`       |-          |VagrantHalt
|`vagrantReload`     |-          |VagrantReload
|`vagrantResume`     |-          |VagrantResume
|`vagrantSshConfig`  |-          |VagrantSshConfig
|`vagrantStatus`     |-          |VagrantStatus
|`vagrantSuspend`    |-          |VagrantSuspend
|`vagrantUp`         |-          |VagrantUp
|=======


=== Example

[source,groovy]
----
vagrant {
    boxDir = file('~/dev/my-vagrant-box')

    environmentVariables {
        variable 'IP', '192.168.1.33'
        variable 'OPERATINGSYSTEM', 'redhat'
    }
}

import org.gradle.api.plugins.vagrant.tasks.Vagrant
import org.gradle.api.plugins.vagrant.tasks.VagrantSsh

task vagrantListsBoxes(type: Vagrant) {
    description = 'Outputs a list of available Vagrant boxes.'
    commands = ['box', 'list']
}

task vagrantEcho(type: VagrantSsh) {
    description = 'Runs remote SSH command in Vagrant box.'
    sshCommand = "echo 'hello'"

    dependsOn vagrantUp
    finalizedBy vagrantDestroy
}
----